# Welcome to Jekyll!


# In addition to these settings, there is a file _data/tokens-template.yml
# that you'll want to customize for your site. It's named 'tokens' because
# that was it's original purpose, but because tokens.yml is .gitexcluded, it's
# a good place to store your site-specific data that you'd rather not have
# forked or cloned. Of course, that means you'd want to back it up elsewhere.

# Also, for your post bylines, add author info for yourself in `_data/authors.yml`.
# (Using that method instead of site.owner, in case your posts get cloned with your repo.)

# Site settings
title: TDD from scratch
description: Un corso operativo per imparare TDD su C#
owner:
  name: TDD Class # or company name
  url: "https://arialdo.martini.github.io"
first_published: 2019 # if migrating another site, the year of your first publish
                      # Must be a 4-digit integer year (math is used on it)
url: "https://tdd-class.github.io"
baseurl: "" # the subpath of your site, e.g. /blog
            # Note you'll have to move your robots.txt to the root if you want it used.
            # And list multiple sitemaps if there are other subdirectories you want indexed
            # besides this blog.
lang: it-it # used in HTML lang attributes

# on landing page
# - set the greeting only if you want to display the first green section
greeting:
  title: Impara Test-Driven Development su C#
  text: Test-Driven Development è una delle più importanti tecniche delle metodologie Agile. TDD consente di scrivere codice flessibile, guidato dai test. Il codice scritto in TDD ha meno difetti, è più manutenibile, è più coesivo e disaccoppiato. <br /> La ricetta di TDD è semplice, ma non è semplice metterla in pratica. Se vuoi imparare TDD, vale la pena lasciarsi guidare dalla mano di esperti. <br/> In questo corso imparerai, mani sulla tastiera, come scrivere i test *prima* del codice produttivo. 
# - displayed at the bottom
closing-head: Acquista il biglietto
closing-para: Donec at pede.  Praesent fermentum tempor tellus.  In id erat non orci commodo lobortis.  Etiam laoreet quam sed arcu.  Vivamus id enim.  Donec pretium posuere tellus.  Nulla posuere.  Curabitur lacinia pulvinar nibh.  Curabitur lacinia pulvinar nibh.  Proin quam nisl, tincidunt et, mattis eget, convallis nec, purus.

# on all pages (and the first three you list display with greeting, if included)
social:
  twitter: https://twitter.com/_username_
  github: https://github.com/_username_
  linkedin-square: https://linkedin.com/in/_username_
  facebook-official: https://facebook.com/_username_
  google-plus-square: https://plus.google.com/u/0/+_username_
  email: /contact/ # you can configure and use this contact page or use your email addy
  #flickr:
  #instagram:
  #youtube-square:
  #spotify:
  #stack-overflow:
  #vimeo:
  #reddit:
  #stubleupon:
  #delicious:
  #pied-piper:
  #digg:
  #soundcloud:
  #deviantart:
  #angellist:
  #tumblr-square:
  #stackexchange:
  #weibo:
  #trello:
  #foursquare:
  #linux:
  #bitbucket-square:
  #vk:
  #slack:
  #vine:
  #weixin:
  #yelp:
  #skyatlas:
  #leanpub:
  #connectdevelop:
  #ils:
  #forumbee:
  #tripadvisor:
  #amazon:

# - title for your blog's featured posts
features-title: Featured topics

# if you use this repo's `ruby compose.rb` script to initiate new posts, put the
# command to invoke your editor here. (I didn't spend time dealing with spaces
# and full paths of the various OSes in compose.rb. For my Windows
# environment, I just put a subl.cmd file in my PATH that points to the full
# path to Sublime's subl.exe.) Also, put your most common post extension.
compose:
  editor: subl
  extension: md

# choose where to put back and next links:
# top, bottom, both, none
navlinks: bottom

# expecting more works? mark your list as in-progress
works_in_progress: yes

# Github pages posts future posts by default.
# You'll want to move the user guide posts to _drafts if you set this to true.
future: false

# If you have custom extensions, specifically includes/_my/custom.scss,
# set this to yes
custom_extensions: no

# Build settings
permalink: /:categories/:title.html
markdown: kramdown
#sass:
#  style: compressed
exclude: ['site.bat','compose.rb','README.md']
include: ['_pages','.htaccess']
defaults:
  - scope:
      path: _pages
    values:
      layout: page
      #permalink: /:slug/ # dunna work. See github.com/jekyll/jekyll/issues/2280
  - scope:
      path: _posts
    values:
      layout: post
  - scope:
      path: _drafts
    values:
      layout: post

# to initialize arrays in assignments (assign myarr = site.empty_array)
# (easier to grok than assign myarr = '' | split',')
empty_array: []
